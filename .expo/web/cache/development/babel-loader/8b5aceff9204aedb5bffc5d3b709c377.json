{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\WORK\\\\React Native\\\\MusicApp\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport expo from \"./app.json\";\nexport default function App() {\n  var audio = new Audio(require(\"./assets/beep.wav\"));\n  audio.type = \"audio/wav\";\n  var userBPM;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      startTimeState = _useState2[0],\n      setStateInterval = _useState2[1];\n\n  var bpm = 70;\n  var bpmInterval = 60000 / bpm;\n\n  function saveTimer() {\n    var startTime = Date.now();\n\n    var beep = function beep() {\n      audio.play();\n      startTime += bpmInterval;\n      setStateInterval(startTime);\n    };\n\n    beep();\n  }\n\n  var myTimerSetInterval = function myTimerSetInterval() {\n    return setInterval(saveTimer, bpmInterval);\n  };\n\n  function hit() {\n    var hitTime = Date.now();\n    var fault = bpmInterval / 16;\n    var firstBorder = startTimeState + bpmInterval - fault;\n    var endInterval = startTimeState + bpmInterval;\n\n    if (hitTime > startTimeState && hitTime < firstBorder) {\n      console.log(\"SLOW NOOB\");\n    }\n\n    if (hitTime >= firstBorder && hitTime <= endInterval) {\n      console.log(\"GOD\");\n    }\n\n    console.log(\"hit\");\n  }\n\n  var stopBeat = function stopBeat() {\n    audio.pause();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(Button, {\n    onPress: myTimerSetInterval,\n    title: \"Mentronom\",\n    color: \"#432454\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: hit,\n    title: \"Beat\",\n    color: \"#841584\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: stopBeat,\n    title: \"Stop beating \",\n    color: \"#841584\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["E:/WORK/React Native/MusicApp/App.js"],"names":["StatusBar","React","useState","expo","App","audio","Audio","require","type","userBPM","startTimeState","setStateInterval","bpm","bpmInterval","saveTimer","startTime","Date","now","beep","play","myTimerSetInterval","setInterval","hit","hitTime","fault","firstBorder","endInterval","console","log","stopBeat","pause","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Button, Alert, Image } from \"react-native\";\nimport expo from \"./app.json\";\n\nexport default function App() {\n  let audio = new Audio(require(\"./assets/beep.wav\"));\n  audio.type = \"audio/wav\";\n\n  let userBPM; // Пользовательское значение метронома\n  const [startTimeState, setStateInterval] = useState(\"\");\n  const bpm = 70; // убрать когда будет UI\n  const bpmInterval = 60000 / bpm;\n\n  function saveTimer() {\n    let startTime = Date.now();\n\n    const beep = () => {\n      audio.play();\n\n      startTime += bpmInterval;\n      setStateInterval(startTime);\n    };\n    beep();\n  }\n  const myTimerSetInterval = () => setInterval(saveTimer, bpmInterval);\n\n  function hit() {\n    const hitTime = Date.now();\n    const fault = bpmInterval / 16;\n\n    const firstBorder = startTimeState + bpmInterval - fault;\n    const endInterval = startTimeState + bpmInterval;\n\n    if (hitTime > startTimeState && hitTime < firstBorder) {\n      console.log(\"SLOW NOOB\");\n    }\n    if (hitTime >= firstBorder && hitTime <= endInterval) {\n      console.log(\"GOD\");\n    }\n    console.log(\"hit\");\n  }\n\n  const stopBeat = () => {\n    audio.pause();\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <Button\n        onPress={myTimerSetInterval}\n        title=\"Mentronom\"\n        color=\"#432454\"\n        accessibilityLabel=\"Learn more about this purple button\"\n      />\n      <Button\n        onPress={hit}\n        title=\"Beat\"\n        color=\"#841584\"\n        accessibilityLabel=\"Learn more about this purple button\"\n      />\n      <Button\n        onPress={stopBeat}\n        title=\"Stop beating \"\n        color=\"#841584\"\n        accessibilityLabel=\"Learn more about this purple button\"\n      />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}