{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\WORK\\\\React Native\\\\MusicApp\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport expo from \"./app.json\";\nexport default function App() {\n  var audio = new Audio(require(\"./assets/beep.wav\"));\n  audio.type = 'audio/wav';\n  var userBPM;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      startTimeState = _useState2[0],\n      setStateInterval = _useState2[1];\n\n  var bpm = 70;\n  var bpmInterval = 60000 / bpm;\n  var startTimenit = Date.now();\n\n  var beep = function beep() {\n    audio.play();\n    var startTime = startTimenit + bpmInterval;\n    setStateInterval(startTime);\n  };\n\n  var myTimerSetInterval = setInterval(beep, bpmInterval);\n\n  function hit() {\n    var hitTime = Date.now();\n    var fault = bpmInterval / 16;\n    var firstBorder = startTimeState + bpmInterval - fault;\n    var endInterval = startTimeState + bpmInterval;\n\n    if (hitTime > startTimeState && hitTime < firstBorder) {\n      console.log(\"SLOW NOOB\");\n    }\n\n    if (hitTime >= firstBorder && hitTime <= endInterval) {\n      console.log(\"GOD\");\n    }\n  }\n\n  var stopBeat = function stopBeat() {\n    clearInterval(myTimerSetInterval);\n    audio.pause();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(Button, {\n    onPress: myTimerSetInterval,\n    title: \"Mentronom\",\n    color: \"#432454\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: hit,\n    title: \"Beat\",\n    color: \"#841584\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: stopBeat,\n    title: \"Stop beating \",\n    color: \"#841584\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["E:/WORK/React Native/MusicApp/App.js"],"names":["StatusBar","React","useState","expo","App","audio","Audio","require","type","userBPM","startTimeState","setStateInterval","bpm","bpmInterval","startTimenit","Date","now","beep","play","startTime","myTimerSetInterval","setInterval","hit","hitTime","fault","firstBorder","endInterval","console","log","stopBeat","clearInterval","pause","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useState} from 'react';\nimport { StyleSheet, Text, View,Button, Alert,Image } from 'react-native';\nimport  expo from'./app.json'\n\nexport default function App() {\n\n\n\n\n\n  let audio =  new Audio(require('./assets/beep.wav'));\n  audio.type='audio/wav'\n\n  let userBPM; // Пользовательское значение метронома\n  const [startTimeState, setStateInterval] = useState(\"\");\n\n  const bpm = 70; // убрать когда будет UI\n  const bpmInterval = 60000/bpm;\n  let startTimenit = Date.now();\n\n\n\n    const beep = () => {\n   \n      audio.play();\n\n     const  startTime = startTimenit+ bpmInterval;\n      setStateInterval(startTime);\n  \n    };\n\n \n    const myTimerSetInterval =  setInterval(beep, bpmInterval);\n \n       \n\n  \n  \n  function hit() {\n    const hitTime = Date.now();\n    const fault = bpmInterval/16;\n    const firstBorder = startTimeState + bpmInterval - fault;\n    const endInterval = startTimeState + bpmInterval;\n\n\n    if (hitTime > startTimeState && hitTime < firstBorder) {\n      console.log(\"SLOW NOOB\");\n    }\n    if (hitTime >= firstBorder && hitTime <= endInterval) {\n      console.log(\"GOD\");\n    }\n  }\n\nconst stopBeat=()=>{\n  clearInterval(myTimerSetInterval)\n  audio.pause()\n\n}\n\n  \n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <Button\n  onPress={myTimerSetInterval}\n  title=\"Mentronom\"\n  color=\"#432454\"\n  accessibilityLabel=\"Learn more about this purple button\"\n/>\n      <Button\n  onPress={hit}\n  title=\"Beat\"\n  color=\"#841584\"\n  accessibilityLabel=\"Learn more about this purple button\"\n/>\n      <Button\n  onPress={stopBeat}\n  title=\"Stop beating \"\n  color=\"#841584\"\n  accessibilityLabel=\"Learn more about this purple button\"\n/>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\n\n\n\n\n\n\n\n\n// import { StatusBar } from \"expo-status-bar\";\n// import React, { useState } from \"react\";\n// import { StyleSheet, Text, View, Button, Alert, Image } from \"react-native\";\n// import expo from \"./app.json\";\n\n// export default function App() {\n//   let audio = new Audio(require(\"./assets/beep.wav\"));\n//   audio.type = \"audio/wav\";\n\n//   let userBPM; // Пользовательское значение метронома\n//   const [startTimeState, setStateInterval] = useState(\"\");\n//   const bpm = 70; // убрать когда будет UI\n//   const bpmInterval = 60000 / bpm;\n\n//   function saveTimer() {\n//     let startTime = Date.now();\n//     const beep = () => {\n//       audio.play();\n\n//       startTime += bpmInterval;\n//       setStateInterval(startTime);\n//     };\n//     beep();\n//   }\n//   const myTimerSetInterval = () => setInterval(saveTimer, bpmInterval);\n\n//   function hit() {\n//     const hitTime = Date.now();\n//     const fault = bpmInterval / 16;\n\n//     const firstBorder = startTimeState + bpmInterval - fault;\n//     const endInterval = startTimeState + bpmInterval;\n//          console.log('startTiimeState', startTimeState)\n//          console.log('firstBorder', firstBorder)\n//          console.log('endInterval', endInterval)\n//     if (hitTime > startTimeState && hitTime < firstBorder) {\n//       console.log(\"SLOW NOOB\");\n//     }\n//     if (hitTime >= firstBorder && hitTime <= endInterval) {\n//       console.log(\"GOD\");\n//     }\n\n//   }\n\n//   const stopBeat = () => {\n//     audio.pause();\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <Text>Open up App.js to start working on your app!</Text>\n//       <Button\n//         onPress={myTimerSetInterval}\n//         title=\"Mentronom\"\n//         color=\"#432454\"\n//         accessibilityLabel=\"Learn more about this purple button\"\n//       />\n//       <Button\n//         onPress={hit}\n//         title=\"Beat\"\n//         color=\"#841584\"\n//         accessibilityLabel=\"Learn more about this purple button\"\n//       />\n//       <Button\n//         onPress={stopBeat}\n//         title=\"Stop beating \"\n//         color=\"#841584\"\n//         accessibilityLabel=\"Learn more about this purple button\"\n//       />\n//       <StatusBar style=\"auto\" />\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: \"#fff\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//   },\n// });\n"]},"metadata":{},"sourceType":"module"}